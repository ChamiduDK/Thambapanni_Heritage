<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

session_start();

// Database connection
$host = '127.0.0.1:3306';
$username = 'u866533411_chamidudhilsha';
$password = 'qazwsx123ED@#';
$dbname = 'u866533411_chamidudhilsha';
$connection = new mysqli($host, $username, $password, $dbname);
if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Load Stripe library
if (!file_exists('vendor/autoload.php')) {
    die("Error: 'vendor/autoload.php' not found. Please upload the 'vendor' folder generated by Composer.");
}
require_once 'vendor/autoload.php';
\Stripe\Stripe::setApiKey(''); // Replace with your Stripe secret key

// Check if user is logged in
if (!isset($_SESSION['customer_id'])) {
    header("Location: customer_login.php");
    exit;
}

$customer_id = $_SESSION['customer_id'];

// Handle item removal
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['remove_item'])) {
    $cart_id = intval($_POST['cart_id']);
    $stmt = $connection->prepare("DELETE FROM cart WHERE id = ? AND customer_id = ?");
    $stmt->bind_param("ii", $cart_id, $customer_id);
    $stmt->execute();
    header("Location: cart.php?success=Item removed from cart!");
    exit;
}

// Fetch cart items with seller details
$query = "
    SELECT c.*, 
           CASE 
               WHEN c.type = 'product' THEN p.name 
               WHEN c.type = 'gig' THEN g.title 
           END AS item_name,
           CASE 
               WHEN c.type = 'product' THEN p.price 
               WHEN c.type = 'gig' THEN gr.price 
           END AS price,
           c.type,
           p.image AS product_image,
           g.image AS gig_image,
           CASE 
               WHEN c.type = 'product' THEN pu.username 
               WHEN c.type = 'gig' THEN gu.username 
           END AS seller_username
    FROM cart c
    LEFT JOIN products p ON c.product_id = p.id AND c.type = 'product'
    LEFT JOIN users pu ON p.user_id = pu.id AND c.type = 'product'
    LEFT JOIN gig_requests gr ON c.gig_request_id = gr.id AND c.type = 'gig'
    LEFT JOIN gigs g ON gr.gig_id = g.id AND c.type = 'gig'
    LEFT JOIN users gu ON g.user_id = gu.id AND c.type = 'gig'
    WHERE c.customer_id = ?
";
$stmt = $connection->prepare($query);
if ($stmt === false) {
    die("Cart query prepare failed: " . $connection->error);
}
$stmt->bind_param("i", $customer_id);
$stmt->execute();
$result = $stmt->get_result();
$cart_items = $result->fetch_all(MYSQLI_ASSOC);
$stmt->close();

// Handle AJAX request to create Stripe session and save pending order
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'create_checkout') {
    header('Content-Type: application/json');
    if (empty($cart_items)) {
        echo json_encode(['error' => 'Your cart is empty!']);
        exit;
    }

    $line_items = [];
    $grand_total = 0;
    foreach ($cart_items as $item) {
        $image = $item['type'] === 'product' ? $item['product_image'] : $item['gig_image'];
        $product_data = ['name' => $item['item_name']];
        if (!empty($image)) {
            $product_data['images'] = [$image];
        }

        $line_items[] = [
            'price_data' => [
                'currency' => 'lkr',
                'product_data' => $product_data,
                'unit_amount' => $item['price'] * 100,
            ],
            'quantity' => $item['quantity'],
        ];
        $grand_total += $item['price'] * $item['quantity'];
    }

    try {
        $connection->begin_transaction();

        // Insert into orders table as pending
        $stmt = $connection->prepare("INSERT INTO orders (customer_id, total_amount, status) VALUES (?, ?, 'pending')");
        $stmt->bind_param("id", $customer_id, $grand_total);
        $stmt->execute();
        $order_id = $connection->insert_id;

        // Insert cart items into order_items with seller info
        $stmt = $connection->prepare("INSERT INTO order_items (order_id, item_name, type, price, quantity, seller_username) VALUES (?, ?, ?, ?, ?, ?)");
        foreach ($cart_items as $item) {
            if (empty($item['seller_username'])) {
                throw new Exception("Seller username missing for item: " . $item['item_name']);
            }
            $stmt->bind_param("issdis", $order_id, $item['item_name'], $item['type'], $item['price'], $item['quantity'], $item['seller_username']);
            $stmt->execute();
        }

        // Create Stripe session
        $session = \Stripe\Checkout\Session::create([
            'payment_method_types' => ['card'],
            'line_items' => $line_items,
            'mode' => 'payment',
            'success_url' => 'http://darkgreen-parrot-704251.hostingersite.com/cart.php?session_id={CHECKOUT_SESSION_ID}',
            'cancel_url' => 'http://darkgreen-parrot-704251.hostingersite.com/cart.php',
        ]);

        // Update orders table with Stripe session ID
        $stmt = $connection->prepare("UPDATE orders SET stripe_session_id = ? WHERE id = ?");
        $stmt->bind_param("si", $session->id, $order_id);
        $stmt->execute();

        $connection->commit();

        $_SESSION['cart_items'] = $cart_items;
        $_SESSION['grand_total'] = $grand_total;
        $_SESSION['pending_order_id'] = $order_id;

        echo json_encode(['sessionId' => $session->id]);
    } catch (\Stripe\Exception\ApiErrorException $e) {
        $connection->rollback();
        echo json_encode(['error' => $e->getMessage()]);
    } catch (Exception $e) {
        $connection->rollback();
        echo json_encode(['error' => 'Database error: ' . $e->getMessage()]);
    }
    exit;
}

// Handle payment confirmation and update order status
if (isset($_GET['session_id'])) {
    try {
        $session = \Stripe\Checkout\Session::retrieve($_GET['session_id']);
        if ($session->payment_status === 'paid') {
            $connection->begin_transaction();

            $order_id = $_SESSION['pending_order_id'];
            $stmt = $connection->prepare("UPDATE orders SET status = 'paid' WHERE id = ? AND stripe_session_id = ?");
            $stmt->bind_param("is", $order_id, $_GET['session_id']);
            $stmt->execute();

            $stmt = $connection->prepare("DELETE FROM cart WHERE customer_id = ?");
            $stmt->bind_param("i", $customer_id);
            $stmt->execute();

            $connection->commit();

            unset($_SESSION['cart_items']);
            unset($_SESSION['grand_total']);
            unset($_SESSION['pending_order_id']);

            $success_message = "Payment successful! Your order has been placed. Order ID: #$order_id";
        } else {
            $error_message = "Payment failed or not completed. Order remains pending.";
        }
    } catch (Exception $e) {
        $connection->rollback();
        $error_message = "An error occurred: " . $e->getMessage();
    }
}

$connection->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thambapanni Heritage - Cart</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/cart-styles.css">
    <script src="https://js.stripe.com/v3/"></script>
</head>
<body>
    <div class="wrapper">
        <nav class="sidebar">
            <div class="sidebar-header">
                <h3>Your Cart</h3>
                <i class="fas fa-times close-sidebar" id="closeSidebar"></i>
            </div>
            <ul class="sidebar-menu">
                <li><a href="gigs.php"><i class="fas fa-briefcase"></i> Gigs</a></li>
                <li><a href="shop.php"><i class="fas fa-shopping-bag"></i> Shop</a></li>
                <li><a href="customer_dashboard.php"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li><a href="logout.php"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
            </ul>
        </nav>

        <div class="main-content">
            <div class="header">
                <i class="fas fa-bars menu-toggle" id="menuToggle"></i>
                <h1>Your Cart</h1>
            </div>

            <?php if (isset($_GET['success'])) { ?>
                <div class="success"><?php echo htmlspecialchars($_GET['success']); ?></div>
            <?php } ?>

            <div class="content-sections">
                <?php if (empty($cart_items)) { ?>
                    <p>Your cart is empty.</p>
                <?php } else { ?>
                    <table class="cart-table">
                        <thead>
                            <tr>
                                <th>Item</th>
                                <th>Type</th>
                                <th>Seller</th>
                                <th>Price (LKR)</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Image</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php $grand_total = 0; ?>
                            <?php foreach ($cart_items as $item) { ?>
                                <tr>
                                    <td><?php echo htmlspecialchars($item['item_name']); ?></td>
                                    <td><?php echo htmlspecialchars($item['type']); ?></td>
                                    <td><?php echo htmlspecialchars($item['seller_username']); ?></td>
                                    <td><?php echo number_format($item['price'], 2); ?></td>
                                    <td><?php echo htmlspecialchars($item['quantity']); ?></td>
                                    <td><?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                                    <td>
                                        <?php if ($item['type'] === 'product' && !empty($item['product_image'])) { ?>
                                            <img src="<?php echo htmlspecialchars($item['product_image']); ?>" alt="Product Image">
                                        <?php } elseif ($item['type'] === 'gig' && !empty($item['gig_image'])) { ?>
                                            <img src="<?php echo htmlspecialchars($item['gig_image']); ?>" alt="Gig Image">
                                        <?php } else { ?>
                                            <div class="placeholder">No Image</div>
                                        <?php } ?>
                                    </td>
                                    <td>
                                        <form method="POST" style="display:inline;">
                                            <input type="hidden" name="cart_id" value="<?php echo $item['id']; ?>">
                                            <button type="submit" name="remove_item" class="remove-btn">
                                                <i class="fas fa-trash-alt"></i> Remove
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                                <?php $grand_total += $item['price'] * $item['quantity']; ?>
                            <?php } ?>
                            <tr>
                                <td colspan="5" style="text-align: right;"><strong>Grand Total:</strong></td>
                                <td><strong>LKR <?php echo number_format($grand_total, 2); ?></strong></td>
                                <td colspan="2"></td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="button-group">
                        <button type="button" id="checkout-button">Proceed to Checkout <i class="fas fa-credit-card"></i></button>
                    </div>
                <?php } ?>
            </div>
        </div>
    </div>

    <div id="message-modal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">×</span>
            <p id="message-text"></p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const menuToggle = document.getElementById('menuToggle');
            const closeSidebar = document.getElementById('closeSidebar');
            const sidebar = document.querySelector('.sidebar');
            const checkoutButton = document.getElementById('checkout-button');
            const stripe = Stripe(''); // Replace with your Stripe publishable key

            menuToggle.addEventListener('click', function() {
                sidebar.classList.toggle('active');
            });
            closeSidebar.addEventListener('click', function() {
                sidebar.classList.remove('active');
            });

            if (checkoutButton) {
                checkoutButton.addEventListener('click', function() {
                    fetch('cart.php', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: 'action=create_checkout'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            showModal(data.error, true);
                        } else {
                            stripe.redirectToCheckout({ sessionId: data.sessionId });
                        }
                    })
                    .catch(error => showModal('An error occurred: ' + error.message, true));
                });
            }

            <?php if (isset($success_message)) { ?>
                showModal(<?php echo json_encode($success_message); ?>, false);
            <?php } elseif (isset($error_message)) { ?>
                showModal(<?php echo json_encode($error_message); ?>, true);
            <?php } ?>

            function showModal(message, isError) {
                const modal = document.getElementById('message-modal');
                const messageText = document.getElementById('message-text');
                messageText.textContent = message;
                messageText.style.color = isError ? 'red' : 'green';
                modal.style.display = 'block';

                const closeBtn = modal.querySelector('.close');
                closeBtn.onclick = function() {
                    modal.style.display = 'none';
                    window.location.href = 'cart.php';
                };
                window.onclick = function(event) {
                    if (event.target == modal) {
                        modal.style.display = 'none';
                        window.location.href = 'cart.php';
                    }
                };
            }
        });
    </script>

    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        .modal-content {
            background-color: #fff;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            text-align: center;
            border-radius: 5px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
        }
        .remove-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
        }
        .remove-btn:hover {
            background-color: #c82333;
        }
    </style>
</body>
</html>